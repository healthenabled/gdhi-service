group 'gdhi-service'
version '1.0-SNAPSHOT'
def jenkinsBuild = System.getenv("BUILD_NUMBER") ?: "0"

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.6.RELEASE'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'com.github.johnrengelman.shadow'

jar {
    baseName = 'gdhi'
    version = '1.0.' + jenkinsBuild
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


task setUpGitHooks(type: Exec){
    commandLine './utils/set-up-git-hooks.sh'
}

test {
    dependsOn setUpGitHooks, checkstyleMain
    finalizedBy jacocoTestReport, check
}

jacocoTestReport {
    group = "codeCoverage"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/*Test*.*'])
            fileTree(dir: it, exclude: ['**/db/*'])
        })
    }
}

task checkstyleHtml {
    doLast {
        ant.xslt(in: checkstyleMain.reports.xml.destination,
                style: file('config/checkstyle-noframes-sorted.xsl'),
                out: new File(checkstyleMain.reports.xml.destination.parent, 'codeCopReport.html'))
    }
}

checkstyleMain.finalizedBy checkstyleHtml

checkstyle {
    sourceSets = [project.sourceSets.main]
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }

    compile 'org.springframework.boot:spring-boot-starter-jetty'

    compile 'org.springframework.boot:spring-boot-starter-actuator'

    compile 'commons-dbcp:commons-dbcp:1.4'

    compile 'org.springframework:spring-jdbc'

    compile 'org.springframework.boot:spring-boot-starter-data-jpa:1.3.3.RELEASE'

    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.6'

    compile 'org.postgresql:postgresql'

    compile 'org.postgresql:postgresql:9.4.1208.jre7'

    compile 'org.flywaydb:flyway-core:4.2.0'

    compile 'org.springframework.boot:spring-boot-starter-mail'

    compile 'org.apache.poi:poi:3.9'
    compile 'org.apache.poi:poi-ooxml:3.9'

    testCompile 'junit:junit:4.12'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.1.RELEASE'
    testCompile 'io.rest-assured:rest-assured:3.0.2'
    testCompile 'io.rest-assured:json-schema-validator:3.0.2'
    testCompile 'io.rest-assured:spring-mock-mvc:3.0.2'
    testCompile 'org.mockito:mockito-core:1.9.5'
}
